<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.krizzscott</groupId>
	<artifactId>ze-delivery-challenge</artifactId>
	<version>1.3.0</version>
	<name>ze-delivery-challenge</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<fixture-factory.version>3.1.0</fixture-factory.version>
		<springfox.version>2.9.2</springfox.version>
		<failsafe-version>3.0.0-M5</failsafe-version>
		<sonar.coverage.eclusions>
			**/*ITests.java,
			com/krizzscott/zedeliverychallenge/ZeDeliveryChallengeApplication.*,
			com/krizzscott/zedeliverychallenge/configurations/log/Log*,
			com/krizzscott/zedeliverychallenge/configurations/swagger/**,
			com/krizzscott/zedeliverychallenge/entrypoints/controllers/dto/*DTO.*,
			com/krizzscott/zedeliverychallenge/exceptions/**
		</sonar.coverage.eclusions>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Dependencies for [database:mongodb] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Dependencies for [tests:springfox] -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>

		<!-- Dependencies for [tests:junit5] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>br.com.six2six</groupId>
			<artifactId>fixture-factory</artifactId>
			<version>${fixture-factory.version}</version>
		</dependency>
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>${surefireArgLine}</argLine>
					<includes>
						<include>**/*UnitTests.java</include>
					</includes>
					<excludes>
						<exclude>**/*ITests.java</exclude>
						<exclude>com/krizzscott/zedeliverychallenge/ZeDeliveryChallengeApplication.*</exclude>
						<exclude>com/krizzscott/zedeliverychallenge/configurations/log/Log*</exclude>
						<exclude>com/krizzscott/zedeliverychallenge/configurations/swagger/**</exclude>
						<exclude>com/krizzscott/zedeliverychallenge/entrypoints/controllers/dto/*DTO.*</exclude>
						<exclude>com/krizzscott/zedeliverychallenge/exceptions/**</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<argLine>${failSafeArgLine}</argLine>
					<includes>
						<include>**/*ITests.java</include>
					</includes>
					<excludes>
						<exclude>**/*UnitTests.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.3</version>
				<configuration>
					<excludes>
						<exclude>com/krizzscott/zedeliverychallenge/ZeDeliveryChallengeApplication.*</exclude>
						<exclude>com/krizzscott/zedeliverychallenge/configurations/log/Log*</exclude>
						<exclude>com/krizzscott/zedeliverychallenge/configurations/swagger/**</exclude>
						<exclude>com/krizzscott/zedeliverychallenge/entrypoints/controllers/dto/*DTO.*</exclude>
						<exclude>com/krizzscott/zedeliverychallenge/exceptions/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-check-ut-tests</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
							<rules>
								<rule>
									<element>CLASS</element>
									<excludes>
										<exclude>*UnitTests</exclude>
										<exclude>*ITests</exclude>
									</excludes>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
							<propertyName>failSafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-check-integration-tests</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
							<rules>
								<rule>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
